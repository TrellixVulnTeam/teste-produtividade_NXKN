{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Trybe-TesteT\\xE9cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/Tasks.jsx\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport List from './List';\nimport CreateTask from './create_task';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n    this.loadTasks = this.loadTasks.bind(this);\n    this.loadTasksOrdered = this.loadTasksOrdered.bind(this);\n    this.handleSetVisible = this.handleSetVisible.bind(this);\n  }\n\n  async deleteAllTask() {\n    if (window.confirm(`Are you sure you want to delete all tasks? This will be forever`)) {\n      await fetch(`http://localhost:3001/DELETEALL`, {\n        method: 'DELETE'\n      }); // console.log(`to aqui hein, no id: ${task._id}, task: ${task.task}`);\n\n      this.loadTasks();\n    }\n  }\n\n  async loadTasks() {\n    try {\n      let response = await fetch(`http://localhost:3001/getAllTasks`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({\n        tasks: tasks\n      });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  async loadTasksOrdered() {\n    try {\n      let response = await fetch(`http://localhost:3001/getAllSort`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({\n        tasks: tasks\n      });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  componentDidMount() {\n    this.loadTasks();\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTask, {\n        loadTasks: this.loadTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pendente\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"On Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Em andamento\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pronto\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.deleteAllTask(),\n            variant: \"red\",\n            className: \"float-right remove_tasks_btn\",\n            children: \"Remove all tasks / Panic Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasksOrdered,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pendente\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"On Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasksOrdered,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Em andamento\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasksOrdered,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pronto\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.deleteAllTask(),\n            variant: \"red\",\n            className: \"float-right remove_tasks_btn\",\n            children: \"Remove all tasks / Panic Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/bruno/Trybe-TesteTÃ©cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/Tasks.jsx"],"names":["React","Component","Row","Col","List","CreateTask","Button","Modal","Tasks","constructor","props","state","tasks","loadTasks","bind","loadTasksOrdered","handleSetVisible","deleteAllTask","window","confirm","fetch","method","response","json","console","log","setState","e","componentDidMount","render","span","offset","Object","values","filter","task","taskStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAE5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC;AADK,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEkB,QAAbG,aAAa,GAAG;AACpB,QAAGC,MAAM,CAACC,OAAP,CAAgB,iEAAhB,CAAH,EAAsF;AACpF,YAAMC,KAAK,CAAE,iCAAF,EAAoC;AAACC,QAAAA,MAAM,EAAE;AAAT,OAApC,CAAX,CADoF,CAEpF;;AACA,WAAKR,SAAL;AACD;AACF;;AAEc,QAATA,SAAS,GAAG;AAChB,QAAG;AACD,UAAIS,QAAQ,GAAG,MAAMF,KAAK,CAAE,mCAAF,CAA1B;AACA,YAAMR,KAAK,GAAG,MAAMU,QAAQ,CAACC,IAAT,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,WAAKc,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KALD,CAKE,OAAOe,CAAP,EAAU;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;;AAEqB,QAAhBV,gBAAgB,GAAG;AACvB,QAAG;AACD,UAAIO,QAAQ,GAAG,MAAMF,KAAK,CAAE,kCAAF,CAA1B;AACA,YAAMR,KAAK,GAAG,MAAMU,QAAQ,CAACC,IAAT,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,WAAKc,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KALD,CAKE,OAAOe,CAAP,EAAU;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,SAAL;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKE;AAA5B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEiB,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACK;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKlB,SAAtB;AAAiC,YAAA,KAAK,EAAEmB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,UAA1D;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKK,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKlB,SAAtB;AAAiC,YAAA,KAAK,EAAEmB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,cAA1D;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALL,eASK,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKlB,SAAtB;AAAiC,YAAA,KAAK,EAAEmB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,QAA1D;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKnB,aAAL,EAAvB;AAA6C,YAAA,OAAO,EAAC,KAArD;AAA2D,YAAA,SAAS,EAAC,8BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAiBA,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEa,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACK;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKhB,gBAAtB;AAAwC,YAAA,KAAK,EAAEiB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,UAA1D;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKK,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKhB,gBAAtB;AAAwC,YAAA,KAAK,EAAEiB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,cAA1D;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALL,eASK,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,KAAKhB,gBAAtB;AAAwC,YAAA,KAAK,EAAEiB,MAAM,CAACC,MAAP,CAAcrB,KAAd,EAAqBsB,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,QAA1D;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKnB,aAAL,EAAvB;AAA6C,YAAA,OAAO,EAAC,KAArD;AAA2D,YAAA,SAAS,EAAC,8BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATL;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA;AAAA,oBADF;AAmCD;;AAnF2B;;AAqF9B,eAAeT,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport List from './List';\nimport CreateTask from './create_task';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Tasks extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks:[]\n    };\n    this.loadTasks = this.loadTasks.bind(this);\n    this.loadTasksOrdered = this.loadTasksOrdered.bind(this);\n    this.handleSetVisible = this.handleSetVisible.bind(this);\n  };\n\n  async deleteAllTask() {\n    if(window.confirm(`Are you sure you want to delete all tasks? This will be forever`)) {\n      await fetch(`http://localhost:3001/DELETEALL`, {method: 'DELETE'});\n      // console.log(`to aqui hein, no id: ${task._id}, task: ${task.task}`);\n      this.loadTasks();\n    }\n  }\n\n  async loadTasks() {\n    try{\n      let response = await fetch(`http://localhost:3001/getAllTasks`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({ tasks: tasks });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  async loadTasksOrdered() {\n    try{\n      let response = await fetch(`http://localhost:3001/getAllSort`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({ tasks: tasks });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  componentDidMount() {\n    this.loadTasks();\n  }\n\n  render() {\n    const { tasks } = this.state\n    return(\n      <>\n      <CreateTask loadTasks={this.loadTasks}/>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">Pending</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pendente\" )}/>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">On Going</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Em andamento\" )}/>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">Done</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pronto\" )}/>\n             <Button onClick={() => this.deleteAllTask()} variant=\"red\" className=\"float-right remove_tasks_btn\">Remove all tasks / Panic Button</Button>\n           </Col>\n      </Row>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">Pending</p>\n             <List loadTasks={this.loadTasksOrdered} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pendente\" )}/>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">On Going</p>\n             <List loadTasks={this.loadTasksOrdered} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Em andamento\" )}/>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">Done</p>\n             <List loadTasks={this.loadTasksOrdered} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pronto\" )}/>\n             <Button onClick={() => this.deleteAllTask()} variant=\"red\" className=\"float-right remove_tasks_btn\">Remove all tasks / Panic Button</Button>\n           </Col>\n      </Row>\n      </>\n    )\n  }\n}\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}