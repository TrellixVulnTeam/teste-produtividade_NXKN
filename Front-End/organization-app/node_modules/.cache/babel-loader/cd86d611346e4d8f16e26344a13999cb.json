{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Trybe-TesteT\\xE9cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/create_task.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateTask(props) {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [details, setDetails] = useState('');\n  const [taskStatus, setTaskStatus] = useState('');\n  const [show, setShow] = useState('');\n\n  const handleSubmit = async () => {\n    await fetch(`http://localhost:3001/createTask`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task: task,\n        details: details,\n        taskStatus: taskStatus\n      })\n    });\n    setShow(false);\n    setTask('');\n    setDetails('');\n    setTaskStatus('');\n    props.loadTasks();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => setShow(true),\n      variant: \"dark\",\n      className: \"float-right create_task_btn\",\n      children: [\"+ \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show || false,\n      onHide: e => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Create New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"form-group\",\n          type: \"email\",\n          placeholder: \"What is yout task?\",\n          value: task || '',\n          onChange: e => setTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"form-group\",\n          type: \"email\",\n          placeholder: \"Tell me details about it\",\n          value: details || '',\n          onChange: e => setDetails(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          className: \"form-group\",\n          class: \"form-select\",\n          multiple: true,\n          \"aria-label\": \"multiple select example\",\n          onChange: e => setTaskStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Select the status of your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pendente\",\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Em andamento\",\n            children: \"On Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pronto\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: e => setShow(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateTask, \"zVtBb9GA5vhDPzGkcbKCVVcuCFI=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/home/bruno/Trybe-TesteTÃ©cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/create_task.jsx"],"names":["React","useState","Modal","Button","Form","FontAwesomeIcon","CreateTask","props","task","setTask","details","setDetails","taskStatus","setTaskStatus","show","setShow","handleSubmit","fetch","method","headers","body","JSON","stringify","loadTasks","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction CreateTask(props) {\n  const [task, setTask] = useState('');\n  const [details, setDetails] = useState('');\n  const [taskStatus, setTaskStatus] = useState('');\n  const [show, setShow] = useState('');\n\n  const handleSubmit = (async () => {\n    await fetch(`http://localhost:3001/createTask`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        task: task, details: details, taskStatus: taskStatus\n      })\n    })\n    setShow(false)\n    setTask('')\n    setDetails('')\n    setTaskStatus('')\n    props.loadTasks();\n  });\n\n  return(\n    <div>\n      <Button onClick={e => setShow(true)} variant=\"dark\" className=\"float-right create_task_btn\">+ <FontAwesomeIcon icon=\"check-circle\" /></Button>\n\n      <Modal show={show || false} onHide={e => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create New Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control className=\"form-group\" type=\"email\" placeholder=\"What is yout task?\" value={task || ''} onChange={e => setTask(e.target.value)} />\n          <Form.Control className=\"form-group\" type=\"email\" placeholder=\"Tell me details about it\" value={details || ''} onChange={e => setDetails(e.target.value)} />\n          <Form.Select className=\"form-group\" class=\"form-select\" multiple aria-label=\"multiple select example\" onChange={e => setTaskStatus(e.target.value)}>\n              <option selected>Select the status of your task</option>\n              <option value=\"Pendente\">To Do</option>\n              <option value=\"Em andamento\">On Going</option>\n              <option value=\"Pronto\">Done</option>\n          </Form.Select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => setShow(false)}>\n            Close\n          </Button>\n          <form onSubmit={handleSubmit}>\n            <Button variant=\"dark\" type=\"submit\">\n              Create\n            </Button>\n          </form>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}