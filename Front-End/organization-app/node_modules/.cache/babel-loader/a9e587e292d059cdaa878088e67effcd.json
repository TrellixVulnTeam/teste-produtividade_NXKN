{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Trybe-TesteT\\xE9cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/Tasks.jsx\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport List from './List';\nimport CreateTask from './create_task';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n    this.loadTasks = this.loadTasks.bind(this);\n  }\n\n  async deleteAllTask() {\n    if (window.confirm(`Are you sure you want to delete all tasks? This will be forever`)) {\n      await fetch(`http://localhost:3001/DELETEALL`, {\n        method: 'DELETE'\n      }); // console.log(`to aqui hein, no id: ${task._id}, task: ${task.task}`);\n\n      this.loadTasks();\n    }\n  }\n\n  async loadTasks() {\n    try {\n      let response = await fetch(`http://localhost:3001/getAllTasks`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({\n        tasks: tasks\n      });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  componentDidMount() {\n    this.loadTasks();\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTask, {\n        loadTasks: this.loadTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"To-do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pendente\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show || false,\n            onHide: e => setShow(false),\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Create New Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"form-group\",\n                type: \"email\",\n                placeholder: \"What is yout task?\",\n                value: task || '',\n                onChange: e => setTask(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"form-group\",\n                type: \"email\",\n                placeholder: \"Tell me details about it\",\n                value: details || '',\n                onChange: e => setDetails(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                className: \"form-group\",\n                class: \"form-select\",\n                multiple: true,\n                \"aria-label\": \"multiple select example\",\n                onChange: e => setTaskStatus(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Select the status of your task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pendente\",\n                  children: \"To Do\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Em andamento\",\n                  children: \"On Going\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pronto\",\n                  children: \"Done\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: e => setShow(false),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  type: \"submit\",\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"On Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Em andamento\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 8,\n            offset: 2\n          },\n          className: \"tasks_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            loadTasks: this.loadTasks,\n            tasks: Object.values(tasks).filter(task => task.taskStatus === \"Pronto\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.deleteAllTask(),\n            variant: \"red\",\n            className: \"float-right remove_tasks_btn\",\n            children: \"Remove all tasks / Panic Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/bruno/Trybe-TesteTÃ©cnico/Lista de Tarefas/Front-End/organization-app/src/components/tasks/Tasks.jsx"],"names":["React","Component","Row","Col","List","CreateTask","Button","Modal","Tasks","constructor","props","state","tasks","loadTasks","bind","deleteAllTask","window","confirm","fetch","method","response","json","console","log","setState","e","componentDidMount","render","span","offset","Object","values","filter","task","taskStatus","show","setShow","setTask","target","value","details","setDetails","setTaskStatus","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport List from './List';\nimport CreateTask from './create_task';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Tasks extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks:[]\n    };\n    this.loadTasks = this.loadTasks.bind(this);\n  };\n\n  async deleteAllTask() {\n    if(window.confirm(`Are you sure you want to delete all tasks? This will be forever`)) {\n      await fetch(`http://localhost:3001/DELETEALL`, {method: 'DELETE'});\n      // console.log(`to aqui hein, no id: ${task._id}, task: ${task.task}`);\n      this.loadTasks();\n    }\n  }\n\n  async loadTasks() {\n    try{\n      let response = await fetch(`http://localhost:3001/getAllTasks`);\n      const tasks = await response.json();\n      console.log(tasks);\n      this.setState({ tasks: tasks });\n    } catch (e) {\n      console.log('erro');\n    }\n  }\n\n  componentDidMount() {\n    this.loadTasks();\n  }\n\n  render() {\n    const { tasks } = this.state\n    return(\n      <>\n      <CreateTask loadTasks={this.loadTasks}/>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">To-do</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pendente\" )}/>\n             <Modal show={show || false} onHide={e => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create New Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control className=\"form-group\" type=\"email\" placeholder=\"What is yout task?\" value={task || ''} onChange={e => setTask(e.target.value)} />\n          <Form.Control className=\"form-group\" type=\"email\" placeholder=\"Tell me details about it\" value={details || ''} onChange={e => setDetails(e.target.value)} />\n          <Form.Select className=\"form-group\" class=\"form-select\" multiple aria-label=\"multiple select example\" onChange={e => setTaskStatus(e.target.value)}>\n              <option selected>Select the status of your task</option>\n              <option value=\"Pendente\">To Do</option>\n              <option value=\"Em andamento\">On Going</option>\n              <option value=\"Pronto\">Done</option>\n          </Form.Select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => setShow(false)}>\n            Close\n          </Button>\n          <form onSubmit={handleSubmit}>\n            <Button variant=\"dark\" type=\"submit\">\n              Create\n            </Button>\n          </form>\n        </Modal.Footer>\n      </Modal>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">On Going</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Em andamento\" )}/>\n           </Col>\n           <Col xs={{ span: 8, offset: 2 }} className=\"tasks_list\">\n             <p className=\"title\">Done</p>\n             <List loadTasks={this.loadTasks} tasks={Object.values(tasks).filter((task) => task.taskStatus === \"Pronto\" )}/>\n             <Button onClick={() => this.deleteAllTask()} variant=\"red\" className=\"float-right remove_tasks_btn\">Remove all tasks / Panic Button</Button>\n           </Col>\n      </Row>\n      </>\n    )\n  }\n}\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}